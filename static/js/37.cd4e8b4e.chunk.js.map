{"version":3,"sources":["hooks/useIsVisible.js","components/State.js"],"names":["OPTIONS","root","rootMargin","threshold","useIsVisible","elementRef","useState","isVisible","setIsVisible","useEffect","current","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","observe","DeltaBarGraph","lazy","retry","Footer","Level","VaccinationHeader","MapExplorer","MapSwitcher","Minigraphs","StateHeader","StateMeta","TimeseriesExplorer","State","t","useTranslation","stateCode","useParams","toUpperCase","useSessionStorage","mapStatistic","setMapStatistic","showAllDistricts","setShowAllDistricts","districtName","regionHighlighted","setRegionHighlighted","delta7Mode","setDelta7Mode","useSWR","DATA_API_ROOT","fetcher","revalidateOnMount","refreshInterval","timeseries","data","timeseriesResponseError","error","stateData","scatter","json","console","log","margin","currentdate","lastUpdated","separator","newDate","Date","month","toLocaleString","date","getDate","getCurrentDate","d3","selectAll","remove","select","append","attr","html","svg","width","strokeWidth","height","y","scale","linear","range","x","xAxis","axis","ticks","tickFormat","d","prefix","formatPrefix","symbol","orient","yAxis","tooltip","Error","domain","call","text","enter","Vaccine1","Vaccine2","color","i","Math","floor","random","getRandomColor","on","style","tipsize","parseInt","event","pageY","pageX","Name","count1","count2","districts","details","includes","obj","meta","population","total","vaccinated1","vaccinated2","STATE_NAMES","toFixed","push","Object","keys","district","vaccine1","vaccine2","gridRowCount","useMemo","gridColumnCount","window","innerWidth","districtCount","filter","length","ceil","stateMetaElement","useRef","isStateMetaVisible","trail","styles","map","element","index","animationDelay","lookback","lastDataDate","updatedDates","tested","vaccinated","formatISO","max","parseIndiaDate","representation","primaryStatistic","MAP_STATISTICS","noDistrictData","UNKNOWN_DISTRICT_KEY","PRIMARY_STATISTICS","every","statistic","getStatistic","statisticConfig","STATISTIC_CONFIGS","noRegionHighlightedDistrictData","hasPrimary","name","content","className","position","dates","forceRender","fallback","minHeight","ref","classnames","expanded","gridTemplateRows","sort","a","b","districtNameA","districtNameB","districtA","districtB","handleSort","slice","undefined","delta","formatNumber","onClick","flexBasis","id","lassName","memo"],"mappings":"4HAEMA,EAAU,CACdC,KAAM,KACNC,WAAY,kBACZC,UAAW,GAuBEC,IApBM,SAACC,GACpB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,qBAAU,WACJJ,EAAWK,SACI,IAAIC,sBAAqB,SAACC,EAASC,GAClDD,EAAQE,SAAQ,SAACC,GACXA,EAAMC,iBACRR,GAAa,GACbK,EAASI,UAAUZ,EAAWK,eAGjCV,GACMkB,QAAQb,EAAWK,WAE7B,CAACL,IAEGE,I,yLCUHY,EAAgBC,gBAAK,kBAAMC,aAAM,kBAAM,2DACvCC,EAASF,gBAAK,kBAAMC,aAAM,kBAAM,oCAChCE,EAAQH,gBAAK,kBAAMC,aAAM,kBAAM,qCAC/BG,EAAoBJ,gBAAK,kBAC7BC,aAAM,kBAAM,qCAERI,EAAcL,gBAAK,kBAAMC,aAAM,kBAAM,iEACrCK,EAAcN,gBAAK,kBAAMC,aAAM,kBAAM,qCACrCM,EAAaP,gBAAK,kBAAMC,aAAM,kBAAM,kEACpCO,EAAcR,gBAAK,kBAAMC,aAAM,kBAAM,oCACrCQ,EAAYT,gBAAK,kBAAMC,aAAM,kBAAM,2DACnCS,EAAqBV,gBAAK,kBAC9BC,aAAM,kBAAM,qCAGd,SAASU,IAAS,IAAD,UACPC,EAAMC,cAAND,EAEFE,EAAYC,cAAYD,UAAUE,cAExC,EAAwCC,YACtC,eACA,UAFF,mBAAOC,EAAP,KAAqBC,EAArB,KAIA,EAAgDjC,oBAAS,GAAzD,mBAAOkC,EAAP,KAAyBC,EAAzB,KACA,EAAkDnC,mBAAS,CACzD4B,UAAWA,EACXQ,aAAc,OAFhB,mBAAOC,EAAP,KAA0BC,EAA1B,KAIA,EAAoCtC,oBAAS,GAA7C,mBAAOuC,EAAP,KAAmBC,EAAnB,KAGA,EAA6DC,YAAO,GAAD,OAC9DC,IAD8D,uBAClCd,EADkC,aAEjEe,IACA,CACEC,mBAAmB,EACnBC,gBAAiB,MALPC,EAAd,EAAQC,KAAyBC,EAAjC,EAA0BC,MASlBF,EAASN,YAAO,GAAD,OAAIC,IAAJ,kBAAmCC,IAAS,CACjEC,mBAAmB,EACnBC,gBAAiB,MAFXE,KAKFG,EAAS,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAOnB,GAEnBuB,GAAU,SAACC,GAAU,IAAD,EACxBC,QAAQC,IAAIF,GACZ,IAAMG,EAAgB,GAAhBA,EAA0B,GAA1BA,EAAsC,GAAtCA,EAAiD,GAYvDF,QAAQC,IAAI,OAAQF,GACpB,IAAMI,EAViB,SAACC,GAAkC,IAArBC,EAAoB,uDAAR,IAC/CL,QAAQC,IAAI,aAAcG,GAC1B,IAAME,EAAU,IAAIC,KAAKH,GAEnBI,EAAQF,EAAQG,eAAe,UAAW,CAAED,MAAO,SACnDE,EAAOJ,EAAQK,UAErB,MAAM,GAAN,OAAUD,EAAO,GAAP,WAAgBA,GAAhB,UAA4BA,IAAtC,OAA+CL,GAA/C,OAA2DG,GAGzCI,CAAc,UAACb,EAAK,UAAN,aAAC,EAASQ,MAM5CM,GAAGC,UAAU,sBAAsBA,UAAU,OAAOC,SACpDF,GAAGC,UAAU,sBAAsBA,UAAU,SAASC,SACtDF,GAAGG,OAAO,sBAAsBC,OAAO,OAAOC,KAAK,KAAM,QAAQA,KAAK,QAAS,aAAaC,KAA5F,UAAoGhB,IACpG,IAAIiB,EAAMP,GAAGG,OAAO,sBAAsBC,OAAO,OAC9CC,KAAK,UADE,cApBS,IAoBT,YArBU,MA2BdG,EA1Ba,IA0BQnB,EAAcA,EAAgBoB,EACnDC,EA5Bc,IA4BSrB,EAAaA,EAEpCsB,EAAIX,GAAGY,MAAMC,SAASC,MAAM,CAACJ,EAAQ,IACrCK,EAAIf,GAAGY,MAAMC,SAASC,MAAM,CAAC,EAAGN,IAIhCQ,EAAQhB,GAAGO,IAAIU,OAAOL,MAAMG,GAAGG,MAAM,GAAGC,YAAW,SAAUC,GACjE,IAAMC,EAASrB,GAAGsB,aAAaF,GAC/B,OAAOC,EAAOT,MAAMQ,GAAKC,EAAOE,UAC/BC,OAAO,UAEJC,EAAQzB,GAAGO,IAAIU,OAAOL,MAAMD,GAAGa,OAAO,SAASN,MAAM,GAAGC,YAAW,SAAUC,GACjF,IAAMC,EAASrB,GAAGsB,aAAaF,GAC/B,OAAOC,EAAOT,MAAMQ,GAAKC,EAAOE,UAIlChB,EAAIH,OAAO,QACRC,KAAK,QAASG,EAAQnB,EAAcA,GACpCgB,KAAK,SAAUK,EAASrB,EAAaA,GACrCgB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,OAAQ,WACbA,KAAK,KAAM,GACXA,KAAK,eAAgB,GAExBE,EAAMA,EAAIH,OAAO,KACdC,KAAK,YAAa,aAAehB,EAAc,IAAMA,EAAa,KAGrE,IAAMqC,EAAU1B,GAAGG,OAAO,sBAAsBC,OAAO,OACpDC,KAAK,QAAS,WA8DjB,IAAMxB,EAAOK,EACb,IAAKL,EACH,MAAM,IAAI8C,MAAM,iBAIhBZ,EAAEa,OAAO,CAAC,EAAG,MACbjB,EAAEiB,OAAO,CAAC,EAAG,MAEbrB,EAAIH,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBK,EAAS,KAC5CmB,KAAKb,GACLZ,OAAO,QACPC,KAAK,OAAQ,OACbA,KAAK,YAAa,aAAeG,EAAQ,SACzCH,KAAK,KAAM,SACXA,KAAK,cAAe,OACpByB,KAAK,oBAERvB,EAAIH,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,aAAeG,EAAQ,QACzCqB,KAAKJ,GACLrB,OAAO,QACPC,KAAK,YAAa,aAClBA,KAAK,KAAM,UACXA,KAAK,cAAe,OACpByB,KAAK,oBAEUvB,EAAIN,UAAU,YAC7BpB,KAAKA,GACLkD,QAAQ3B,OAAO,KACfC,KAAK,QAAS,WACdA,KAAK,KAAK,SAACe,GAAQ,OAAOL,EAAEK,EAAEY,aAC9B3B,KAAK,KAAK,SAACe,GAAQ,OAAOT,EAAES,EAAEa,aAEvB7B,OAAO,UACdC,KAAK,MAAM,SAACe,GAAQ,OAAOL,EAAEK,EAAEY,aAC/B3B,KAAK,MAAM,SAACe,GAAQ,OAAOT,EAAES,EAAEa,aAC/B5B,KAAK,IAAK,GACVA,KAAK,QAAQ,SAACe,GACb,IAAMc,EAlGZ,WAGE,IAFA,IACIA,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,IACrBD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,EA4FWK,GAEd,OADAnB,EAAEc,MAAQA,EACHA,KAERM,GAAG,aAzFR,SAAqBpB,EAAGe,GACtBhD,QAAQC,IAAI,UAAWgC,GACvBM,EAAQe,MAAM,CACZ,QAAW,QACX,OAAU,OACV,MAAS,QACT,QAAW,MACX,QAAW,EACX,mBAAoBrB,EAAEc,QAGxB,IAAMQ,EACAC,SAASjB,EAAQe,MAAM,UADvBC,EAEAC,SAASjB,EAAQe,MAAM,WAG7Bf,EAAQe,MAAM,CACZ,IAAQzC,GAAG4C,MAAMC,MAAQH,EAAa,EAAK,KAC3C,KAAS1C,GAAG4C,MAAME,MAAQJ,EAAa,IAAO,OAC7CpC,KAAK,YAAcc,EAAE2B,KAAhB,wBACe3B,EAAEY,SADjB,0BAEeZ,EAAEa,SAFjB,8BAGoBb,EAAE4B,OAAS5B,EAAE6B,YAoEtCT,GAAG,YA7DR,SAAqBpB,EAAGe,GACtBhD,QAAQC,IAAI,UAAWgC,GACvBM,EAAQe,MAAM,CACZ,QAAW,aAiEjBxG,qBAAU,WASR,GARIkC,EAAkBT,YAAcA,IAClCU,EAAqB,CACnBV,UAAWA,EACXQ,aAAc,OAEhBD,GAAoB,IAEtBkB,QAAQC,IAAI,OAAQP,GACpB,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOnB,GAAY,CACrByB,QAAQC,IAAI,QAASP,EAAKnB,GAAWwF,WACrC,IAAMC,EAAU,GAEhB,GADqB,CAAC,KAAM,MACXC,SAAS1F,GAAY,CAAC,IAAD,YAEiF,0BAD/G2F,EAAM,GACZ,IAAI,UAAAxE,EAAKnB,UAAL,mBAAiB4F,YAAjB,eAAuBC,cAAvB,UAAqC1E,EAAKnB,UAA1C,iBAAqC,EAAiB8F,aAAtD,aAAqC,EAAwBC,eAA7D,UAA4E5E,EAAKnB,UAAjF,iBAA4E,EAAiB8F,aAA7F,aAA4E,EAAwBE,aACtGL,EAAIN,KAAOY,IAAYjG,GACvB2F,EAAIrB,WAAa,UAAAnD,EAAKnB,UAAL,mBAAiB8F,aAAjB,eAAwBC,cAAxB,UAAsC5E,EAAKnB,UAA3C,aAAsC,EAAiB4F,KAAKC,YAAc,KAAKK,QAAQ,GACxGP,EAAIpB,WAAa,UAAApD,EAAKnB,UAAL,mBAAiB8F,aAAjB,eAAwBE,cAAxB,UAAsC7E,EAAKnB,UAA3C,aAAsC,EAAiB4F,KAAKC,YAAc,KAAKK,QAAQ,GACxGP,EAAIL,OAAJ,UAAanE,EAAKnB,UAAlB,iBAAa,EAAiB8F,aAA9B,aAAa,EAAwBC,YACrCJ,EAAIJ,OAAJ,UAAapE,EAAKnB,UAAlB,iBAAa,EAAiB8F,aAA9B,aAAa,EAAwBE,YACrCL,EAAI3D,KAAJ,oBAAWb,EAAKnB,UAAhB,iBAAW,EAAiB4F,YAA5B,aAAW,EAAuBzD,YAAlC,QAA0C,GACtCwD,EAAIrB,SAAW,MACjBqB,EAAIrB,SAAW,IACf7C,QAAQC,IAAI,UAAWiE,IAErBA,EAAIpB,SAAW,MACjBoB,EAAIpB,SAAW,KAEboB,EAAIrB,UAAYqB,EAAIpB,UAAYoB,EAAIrB,UAAY,KAAOqB,EAAIpB,UAAY,KACzEkB,EAAQU,KAAKR,QAIjBS,OAAOC,KAAKlF,EAAKnB,GAAWwF,WAAW5G,SAAQ,SAAC0H,GAAc,IAAD,kBAC3D,IAAI,UAAAnF,EAAKnB,GAAWwF,iBAAhB,mBAA4Bc,UAA5B,mBAAuCR,aAAvC,eAA8CC,eAA9C,UAA6D5E,EAAKnB,GAAWwF,iBAA7E,iBAA6D,EAA4Bc,UAAzF,iBAA6D,EAAuCR,aAApG,aAA6D,EAA8CE,eAA3G,UAA0H7E,EAAKnB,GAAWwF,iBAA1I,iBAA0H,EAA4Bc,UAAtJ,iBAA0H,EAAuCV,YAAjK,aAA0H,EAA6CC,YAAY,CAAC,IAAD,wBASrH,sBAR5DU,IAAa,UAAApF,EAAKnB,GAAWwF,iBAAhB,mBAA4Bc,UAA5B,mBAAuCR,aAAvC,eAA8CC,cAA9C,UAA4D5E,EAAKnB,GAAWwF,iBAA5E,iBAA4D,EAA4Bc,UAAxF,iBAA4D,EAAuCV,YAAnG,aAA4D,EAA6CC,YAAc,KAAKK,QAAQ,GACjJM,IAAa,UAAArF,EAAKnB,GAAWwF,iBAAhB,mBAA4Bc,UAA5B,mBAAuCR,aAAvC,eAA8CE,cAA9C,UAA4D7E,EAAKnB,GAAWwF,iBAA5E,iBAA4D,EAA4Bc,UAAxF,iBAA4D,EAAuCV,YAAnG,aAA4D,EAA6CC,YAAc,KAAKK,QAAQ,GAOrJ,GANIK,EAAW,MACbA,EAAW,KAETC,EAAW,MACbA,EAAW,KAETD,GAAYC,GAAYD,GAAY,KAAOC,GAAY,IACzDf,EAAQU,KAAK,CACX,mBAAYI,SAAZ,QAAwB,EACxB,mBAAYC,SAAZ,QAAwB,EACxB,iBAAUrF,EAAKnB,GAAWwF,iBAA1B,iBAAU,EAA4Bc,UAAtC,iBAAU,EAAuCR,aAAjD,aAAU,EAA8CC,YACxD,iBAAU5E,EAAKnB,GAAWwF,iBAA1B,iBAAU,EAA4Bc,UAAtC,iBAAU,EAAuCR,aAAjD,aAAU,EAA8CE,YACxD,KAAQM,EACR,yBAAQnF,EAAKnB,UAAb,iBAAQ,EAAiB4F,YAAzB,aAAQ,EAAuBzD,YAA/B,QAAuC,SAMjDZ,GAAQkE,MAoCT,CAAChF,EAAkBT,UAAWA,EAAWsB,EAAWH,IAGvD,IAaMsF,GAAeC,mBAAQ,WAC3B,GAAKpF,EAAL,CACA,IAAMqF,EAAkBC,OAAOC,YAAc,IAAM,EAAI,EACjDC,GAAyB,OAATxF,QAAS,IAATA,OAAA,EAAAA,EAAWkE,WAC7BY,OAAOC,KAAK/E,EAAUkE,WAAWuB,QACjC,SAACvG,GAAD,MAAmC,YAAjBA,KAClBwG,OACA,EAEJ,OADqBtC,KAAKuC,KAAKH,EAAgBH,MAE9C,CAACrF,IAEE4F,GAAmBC,mBACnBC,GAAqBlJ,YAAagJ,IAElCG,GAAQX,mBAAQ,WACpB,IAAMY,EAAS,GAQf,MANA,CAAC,EAAG,EAAG,EAAG,GAAGC,KAAI,SAACC,EAASC,GAIzB,OAHAH,EAAOnB,KAAK,CACVuB,eAAe,GAAD,OAAa,IAARD,EAAL,QAET,QAEFH,IACN,IAEGK,GAAWrH,EAAoBsG,OAAOC,YAAc,IAAM,GAAK,EAAK,EAEpEe,GAAelB,mBAAQ,WAAO,IAAD,UAC3BmB,EAAe,QACnBvG,QADmB,IACnBA,GADmB,UACnBA,EAAWsE,YADQ,aACnB,EAAiBzD,KADE,OAEnBb,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAWsE,YAFQ,iBAEnB,EAAiBkC,cAFE,aAEnB,EAAyB3F,KAFN,OAGnBb,QAHmB,IAGnBA,GAHmB,UAGnBA,EAAWsE,YAHQ,iBAGnB,EAAiBmC,kBAHE,aAGnB,EAA6B5F,MAC7B4E,QAAO,SAAC5E,GAAD,OAAUA,KACnB,OAAO0F,EAAab,OAAS,EACzBgB,YAAUC,YAAIJ,EAAaN,KAAI,SAACpF,GAAD,OAAU+F,YAAe/F,OAAS,CACjEgG,eAAgB,SAEhB,OACH,CAAC7G,IAEE8G,GAAmBC,IAAe3C,SAAStF,GAC7CA,EACA,YAEEkI,GAAiB5B,mBAAQ,WAAO,IAAD,EAEnC,UACW,OAATpF,QAAS,IAATA,OAAA,EAAAA,EAAWkE,aAAX,UACAlE,EAAUkE,iBADV,aACA,EAAsB+C,OACtBC,IAAmBC,OACjB,SAACC,GAAD,OACEC,YAAarH,EAAW,QAASoH,KACjCC,YACErH,EAAUkE,UAAU+C,KACpB,QACAG,SAIP,CAACpH,IAEEsH,GAAkBC,IAAkBT,IAEpCU,IACa,OAAjBrI,QAAiB,IAAjBA,OAAA,EAAAA,EAAmBD,eACnBC,EAAkBD,eAAiB+H,KACnCD,GAEI9C,GAAYY,OAAOC,OACpBiC,KAAmBM,GAAgBG,cAArC,OACCzH,QADD,IACCA,OADD,EACCA,EAAWkE,YACb,IAIF,OACE,qCACE,eAAC,IAAD,WACE,6DAC2BS,IAAYjG,GADvC,sBAGA,sBACEgJ,KAAK,QACLC,QAAO,kCAA6BhD,IAAYjG,GAAzC,oCAIX,sBAAKkJ,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACE,cAACxJ,EAAD,CAAayB,KAAMG,EAAWtB,UAAWA,IAEzC,sBAAK+E,MAAO,CAAEoE,SAAU,YAAxB,UACE,cAAC3J,EAAD,CAAmBY,eAAcC,oBACjC,cAAChB,EAAD,CAAO8B,KAAMG,IACb,cAAC7B,EAAD,CACEyB,WAAU,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAalB,UAAf,aAAE,EAAyBoJ,MAC/BpJ,YACNqJ,cAAejI,QAIT,OAATE,QAAS,IAATA,GAAA,UAAAA,EAAWwE,aAAX,eAAkBC,cACjB,cAACzG,EAAD,CAAmB6B,KAAMG,IAG1BH,GACC,cAAC,WAAD,CAAUmI,SAAU,qBAAKvE,MAAO,CAAEwE,UAAW,WAA7C,SACE,cAAChK,EAAD,CAEIS,YACAmB,OACAV,oBACAC,uBACAN,eACAC,kBACAuH,gBACAjH,aACAC,gBACAkI,mCACAR,sBAMR,sBAAMkB,IAAKtC,KAEVE,IAAsBjG,GACrB,cAAC,WAAD,CAAUmI,SAAU,wBAApB,SACE,cAAC3J,EAAD,CAEIK,YACAmB,OAEFD,WAAU,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAalB,UAAf,aAAE,EAAyBoJ,aAM7C,qBAAKF,UAAU,cAAf,SACE,qCACE,sBAAKA,UAAU,eAAf,UACE,sBACEA,UAAWO,IAAW,mBAAoB,CACxCC,SAAUpJ,IAFd,UAKE,sBAAK4I,UAAU,oBAAf,UACE,oBACEA,UAAWO,IAAWrB,GAAkB,YACxCrD,MAAOsC,GAAM,GAFf,SAIGvH,EAAE,mBAEL,qBACEoJ,UAAS,6BAAwB5I,EAAmB,UAAY,IAEhEyE,MACEzE,EAAgB,aAEZqJ,iBAAiB,UAAD,OAAYlD,GAAZ,YACbY,GAAM,IAETA,GAAM,GATd,SAYG7B,GACEuB,QAAO,SAACvG,GAAD,MAAmC,YAAjBA,KACzBoJ,MAAK,SAACC,EAAGC,GAAJ,OApLP,SAACC,EAAeC,GACjC,IAAMC,EAAY3I,EAAUkE,UAAUuE,GAChCG,EAAY5I,EAAUkE,UAAUwE,GACtC,OACErB,YAAauB,EAAW,QAAS9J,GACjCuI,YAAasB,EAAW,QAAS7J,GA+KD+J,CAAWN,EAAGC,MAC7BM,MAAM,EAAG9J,OAAmB+J,EAAY,GACxC9C,KAAI,SAAC/G,GACJ,IAAMsF,EAAQ6C,YACZrH,EAAUkE,UAAUhF,GACpB,QACA4H,IAEIkC,EAAQ3B,YACZrH,EAAUkE,UAAUhF,GACpB,QACA4H,IAEF,OACE,sBAAwBc,UAAU,WAAlC,UACE,6BAAKqB,YAAazE,KAClB,6BAAKhG,EAAEU,KACe,WAArB4H,IACC,qBAAKc,UAAU,QAAf,SACE,oBAAIA,UAAWd,GAAf,SACGkC,EAAQ,EACL,SAAWC,YAAaD,GACxB,SARF9J,WAkBpB,sBAAK0I,UAAU,8BAA8BnE,MAAOsC,GAAM,GAA1D,UACGnG,IACuB,cAArBkH,IACsB,aAArBA,KACA,qBAAKc,UAAU,aAAf,SACG9C,OAAOC,MAAK,UAAAnF,EAAWlB,UAAX,eAAuBoJ,QAAS,IAC1CgB,OAAOzC,IACPc,OACC,SAACtG,GAAD,OAKQ,IAJNwG,YACEzH,EAAWlB,GAAWoJ,MAAMjH,GAC5B,QACAiG,QAGJ,sBACEc,UAAS,gBAAgC,cAArBd,GAAmC,WAAa,IADtE,UAIE,cAAC,IAAD,IACA,sBAAKc,UAAU,cAAf,oBACUd,GADV,uCAQZ,cAACnJ,EAAD,CACEiC,WAAU,OAAEA,QAAF,IAAEA,GAAF,UAAEA,EAAalB,UAAf,aAAE,EAAyBoJ,MACrCV,UAAWN,GACLpI,YAAW2H,YACjB0B,cAAejI,UAKrB,qBAAK8H,UAAU,sBAAf,SACG1D,GAAUwB,OAAS,EAClB,wBACEkC,UAAU,kBACVsB,QAjQa,WAC7BjK,GAAqBD,IAiQLyE,MAAOsC,GAAM,GAHf,SAKE,+BACGvH,EAAEQ,EAAmB,YAAc,gBAIxC,qBAAKyE,MAAO,CAAE/B,OAAQ,UAAWyH,UAAW,cAKlD,eAAC,WAAD,CAAUnB,SAAU,wBAApB,UACE,cAAC1J,EAAD,CAEII,YACAkB,aACAT,oBACAC,uBACAoI,mCAEFO,cAAejI,IAEjB,qBAAKsJ,GAAG,oBAAR,SACE,oBAAIC,SAAS,eAAb,SAA6B7K,EAAE,uCAQzC,wBAIA,cAACV,EAAD,OAKSwL,yBAAK/K","file":"static/js/37.cd4e8b4e.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\n\nconst OPTIONS = {\n  root: null,\n  rootMargin: '0px 0px 0px 0px',\n  threshold: 0,\n};\n\nconst useIsVisible = (elementRef) => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    if (elementRef.current) {\n      const observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.unobserve(elementRef.current);\n          }\n        });\n      }, OPTIONS);\n      observer.observe(elementRef.current);\n    }\n  }, [elementRef]);\n\n  return isVisible;\n};\n\nexport default useIsVisible;\n","import {\n  DATA_API_ROOT,\n  MAP_STATISTICS,\n  PRIMARY_STATISTICS,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {\n  fetcher,\n  formatNumber,\n  getStatistic,\n  parseIndiaDate,\n  retry,\n} from '../utils/commonFunctions';\n\nimport { SmileyIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport { formatISO, max } from 'date-fns';\nimport {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  lazy,\n  Suspense,\n  useRef,\n} from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\nimport { useSessionStorage } from 'react-use';\nimport useSWR from 'swr';\n\nconst DeltaBarGraph = lazy(() => retry(() => import('./DeltaBarGraph')));\nconst Footer = lazy(() => retry(() => import('./Footer')));\nconst Level = lazy(() => retry(() => import('./Level')));\nconst VaccinationHeader = lazy(() =>\n  retry(() => import('./VaccinationHeader'))\n);\nconst MapExplorer = lazy(() => retry(() => import('./MapExplorer')));\nconst MapSwitcher = lazy(() => retry(() => import('./MapSwitcher')));\nconst Minigraphs = lazy(() => retry(() => import('./Minigraphs')));\nconst StateHeader = lazy(() => retry(() => import('./StateHeader')));\nconst StateMeta = lazy(() => retry(() => import('./StateMeta')));\nconst TimeseriesExplorer = lazy(() =>\n  retry(() => import('./TimeseriesExplorer'))\n);\n\nfunction State() {\n  const { t } = useTranslation();\n\n  const stateCode = useParams().stateCode.toUpperCase();\n\n  const [mapStatistic, setMapStatistic] = useSessionStorage(\n    'mapStatistic',\n    'active'\n  );\n  const [showAllDistricts, setShowAllDistricts] = useState(false);\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: stateCode,\n    districtName: null,\n  });\n  const [delta7Mode, setDelta7Mode] = useState(false);\n\n\n  const { data: timeseries, error: timeseriesResponseError } = useSWR(\n    `${DATA_API_ROOT}/timeseries-${stateCode}.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n    }\n  );\n\n  const { data } = useSWR(`${DATA_API_ROOT}/data.min.json`, fetcher, {\n    revalidateOnMount: true,\n    refreshInterval: 100000,\n  });\n\n  const stateData = data?.[stateCode];\n\n  const scatter = (json) => {\n    console.log(json)\n    const margin = { top: 60, left: 35, bottom: 40, right: 50 }\n    const heightValue = 300;\n    const widthValue = 600;\n    const getCurrentDate = (lastUpdated, separator = ' ') => {\n      console.log('lastUpdate', lastUpdated)\n      const newDate = new Date(lastUpdated)\n\n      const month = newDate.toLocaleString('default', { month: 'long' });\n      const date = newDate.getDate();\n\n      return `${date < 10 ? `0${date}` : `${date}`}${separator}${month}`\n    }\n    console.log('json', json)\n    const currentdate = getCurrentDate(json[0]?.Date)\n    /* \n    * The next block of code selects the id scatterplot-stats on the web page \n    * and appends an svg object to it of the size \n    * that we have set up with our width, height and margin’s.\n    */\n    d3.selectAll(\"#scatterplot-stats\").selectAll(\"svg\").remove()\n    d3.selectAll(\"#scatterplot-stats\").selectAll(\"#date\").remove()\n    d3.select(\"#scatterplot-stats\").append(\"div\").attr(\"id\", \"date\").attr(\"class\", 'graphtext').html(`${currentdate}`)\n    let svg = d3.select(\"#scatterplot-stats\").append(\"svg\")\n      .attr(\"viewBox\", `0 0 ${widthValue} ${heightValue}`)\n\n\n    const strokeWidth = 1.5;\n\n    const width = widthValue - margin.left - margin.right - (strokeWidth * 2);\n    const height = heightValue - margin.top - margin.bottom;\n\n    const y = d3.scale.linear().range([height, 0]);\n    const x = d3.scale.linear().range([0, width]);\n\n\n    // let prefix = d3.formatPrefix(1.21e9);\n    const xAxis = d3.svg.axis().scale(x).ticks(6).tickFormat(function (d) {\n      const prefix = d3.formatPrefix(d);\n      return prefix.scale(d) + prefix.symbol;\n    }).orient(\"bottom\")\n\n    const yAxis = d3.svg.axis().scale(y).orient(\"right\").ticks(6).tickFormat(function (d) {\n      const prefix = d3.formatPrefix(d);\n      return prefix.scale(d) + prefix.symbol;\n    });\n\n\n    svg.append(\"rect\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"fill\", \"#E3E2F3\")\n      .attr(\"rx\", 4)\n      .attr(\"fill-opacity\", 1);\n    // It also adds a g element that provides a reference point for adding our axes.  \n    svg = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n    const tooltip = d3.select(\"#scatterplot-stats\").append(\"div\")\n      .attr(\"class\", \"tooltip\");\n\n    // function getColor(arg) {\n    //   return getRandomColor()\n    // }\n\n    function getRandomColor() {\n      const letters = '0123456789ABCDEF';\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    }\n\n    /* \n    * this function is like mouse over. \n    * If we place the mouse over a circle the tooltip is going to show up.\n    */\n    function showToolTip(d, i) {\n      console.log('tooltip', d)\n      tooltip.style({\n        \"display\": \"block\",\n        \"height\": \"80px\",\n        \"width\": \"200px\",\n        \"padding\": \"5px\",\n        \"opacity\": 1,\n        \"background-color\": d.color\n      });\n\n      const tipsize = {\n        dx: parseInt(tooltip.style(\"width\")),\n        dy: parseInt(tooltip.style(\"height\"))\n      };\n\n      tooltip.style({\n        \"top\": (d3.event.pageY - tipsize.dy - 5) + \"px\",\n        \"left\": (d3.event.pageX - tipsize.dx + 100) + \"px\"\n      }).html(\"<span><b>\" + d.Name + \"<br/>\" +\n        \"Vaccine Dose 1: \" + d.Vaccine1 + \"% <br/>\" +\n        \"Vaccine Dose 2: \" + d.Vaccine2 + \"%<br/>\" +\n        \"Total Vaccinations: \" + (d.count1 + d.count2))\n    }\n\n    /* \n    * This function is like mouse out. \n    * If we mouse out then the tooltip is hidding\n    */\n    function hideToolTip(d, i) {\n      console.log('tooltip', d)\n      tooltip.style({\n        \"display\": \"none\"\n      });\n    }\n\n\n    /* \n    * d3.json takes the variable url and two more parameters\n    * if error, then throw it\n    * else map the time-date in the horizontal axis and the rank-position in the verticall axis\n    */\n    // d3.json(json, (error, data) => {\n    const data = json;\n    if (!data) {\n      throw new Error(\"d3.json error\");\n    }\n    else {\n\n      x.domain([0, 100]);\n      y.domain([0, 100]);\n\n      svg.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(xAxis)\n        .append(\"text\")\n        .attr(\"fill\", \"red\")\n        .attr(\"transform\", \"translate(\" + width + \",-30)\")\n        .attr(\"dy\", \"4.5em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Vaccine Dose 1 %\");\n\n      svg.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .attr(\"transform\", \"translate(\" + width + \", 0)\")\n        .call(yAxis)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(0)\")\n        .attr(\"dy\", \"-0.8em\")\n        .attr(\"text-anchor\", \"end\")\n        .text(\"Vaccine Dose 2 %\");\n\n      const districts = svg.selectAll(\".cyclist\")\n        .data(data)\n        .enter().append(\"g\")\n        .attr(\"class\", \"cyclist\")\n        .attr(\"x\", (d) => { return x(d.Vaccine1); })\n        .attr(\"y\", (d) => { return y(d.Vaccine2); });\n\n      districts.append(\"circle\")\n        .attr(\"cx\", (d) => { return x(d.Vaccine1) })\n        .attr(\"cy\", (d) => { return y(d.Vaccine2); })\n        .attr(\"r\", 5)\n        .attr(\"fill\", (d) => {\n          const color = getRandomColor();\n          d.color = color;\n          return color\n        })\n        .on(\"mouseover\", showToolTip)\n        .on(\"mouseout\", hideToolTip)\n\n    }\n\n  }\n\n\n  useEffect(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted({\n        stateCode: stateCode,\n        districtName: null,\n      });\n      setShowAllDistricts(false);\n    }\n    console.log('json', data)\n    if (data?.[stateCode]) {\n      console.log('state', data[stateCode].districts)\n      const details = [];\n      const noPopulation = ['DL', 'LA']\n      if (noPopulation.includes(stateCode)) {\n        const obj = {};\n        if (data[stateCode]?.meta?.population && data[stateCode]?.total?.vaccinated1 && data[stateCode]?.total?.vaccinated2) {\n          obj.Name = STATE_NAMES[stateCode];\n          obj.Vaccine1 = ((data[stateCode]?.total?.vaccinated1 / data[stateCode]?.meta.population) * 100).toFixed(2)\n          obj.Vaccine2 = ((data[stateCode]?.total?.vaccinated2 / data[stateCode]?.meta.population) * 100).toFixed(2)\n          obj.count1 = data[stateCode]?.total?.vaccinated1;\n          obj.count2 = data[stateCode]?.total?.vaccinated2;\n          obj.Date = data[stateCode]?.meta?.date ?? ''\n          if (obj.Vaccine1 > 100) {\n            obj.Vaccine1 = 100\n            console.log('greater', obj)\n          }\n          if (obj.Vaccine2 > 100) {\n            obj.Vaccine2 = 100\n          }\n          if (obj.Vaccine1 && obj.Vaccine2 && obj.Vaccine1 <= 100 && obj.Vaccine2 <= 100) {\n            details.push(obj)\n          }\n        }\n      } else {\n        Object.keys(data[stateCode].districts).forEach((district) => {\n          if (data[stateCode].districts?.[district]?.total?.vaccinated1 && data[stateCode].districts?.[district]?.total?.vaccinated2 && data[stateCode].districts?.[district]?.meta?.population) {\n            let vaccine1 = ((data[stateCode].districts?.[district]?.total?.vaccinated1 / data[stateCode].districts?.[district]?.meta?.population) * 100).toFixed(2);\n            let vaccine2 = ((data[stateCode].districts?.[district]?.total?.vaccinated2 / data[stateCode].districts?.[district]?.meta?.population) * 100).toFixed(2);\n            if (vaccine1 > 100) {\n              vaccine1 = 100\n            }\n            if (vaccine2 > 100) {\n              vaccine2 = 100\n            }\n            if (vaccine1 && vaccine2 && vaccine1 <= 100 && vaccine2 <= 100) {\n              details.push({\n                \"Vaccine1\": vaccine1 ?? 0,\n                \"Vaccine2\": vaccine2 ?? 0,\n                \"count1\": data[stateCode].districts?.[district]?.total?.vaccinated1,\n                \"count2\": data[stateCode].districts?.[district]?.total?.vaccinated2,\n                \"Name\": district,\n                \"Date\": data[stateCode]?.meta?.date ?? ''\n              })\n            }\n          }\n        })\n      }\n      scatter(details)\n    }\n\n    // scatter([\n    //     {\n    // \"Time\": 300000,\n    // \"Place\": 10000,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    //   },\n    //           {\n    // \"Time\": 3504,\n    // \"Place\": 3300,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    //   },\n    // {\n    // \"Time\": 55,\n    // \"Place\": 100,\n    // \"Seconds\": 2210,\n    // \"Name\": \"Marco Pantani\",\n    // \"Year\": 1995,\n    // \"Nationality\": \"ITA\",\n    // \"Doping\": \"Alleged drug use during 1995 due to high hematocrit levels\",\n    // \"URL\": \"https://en.wikipedia.org/wiki/Marco_Pantani#Alleged_drug_use\"\n    // },\n    //   ]);\n\n  }, [regionHighlighted.stateCode, stateCode, stateData, data]);\n\n\n  const toggleShowAllDistricts = () => {\n    setShowAllDistricts(!showAllDistricts);\n  };\n\n  const handleSort = (districtNameA, districtNameB) => {\n    const districtA = stateData.districts[districtNameA];\n    const districtB = stateData.districts[districtNameB];\n    return (\n      getStatistic(districtB, 'total', mapStatistic) -\n      getStatistic(districtA, 'total', mapStatistic)\n    );\n  };\n\n  const gridRowCount = useMemo(() => {\n    if (!stateData) return;\n    const gridColumnCount = window.innerWidth >= 540 ? 3 : 2;\n    const districtCount = stateData?.districts\n      ? Object.keys(stateData.districts).filter(\n        (districtName) => districtName !== 'Unknown'\n      ).length\n      : 0;\n    const gridRowCount = Math.ceil(districtCount / gridColumnCount);\n    return gridRowCount;\n  }, [stateData]);\n\n  const stateMetaElement = useRef();\n  const isStateMetaVisible = useIsVisible(stateMetaElement);\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const lookback = showAllDistricts ? (window.innerWidth >= 540 ? 10 : 8) : 6;\n\n  const lastDataDate = useMemo(() => {\n    const updatedDates = [\n      stateData?.meta?.date,\n      stateData?.meta?.tested?.date,\n      stateData?.meta?.vaccinated?.date,\n    ].filter((date) => date);\n    return updatedDates.length > 0\n      ? formatISO(max(updatedDates.map((date) => parseIndiaDate(date))), {\n        representation: 'date',\n      })\n      : null;\n  }, [stateData]);\n\n  const primaryStatistic = MAP_STATISTICS.includes(mapStatistic)\n    ? mapStatistic\n    : 'confirmed';\n\n  const noDistrictData = useMemo(() => {\n    // Heuristic: All cases are in Unknown\n    return !!(\n      stateData?.districts &&\n      stateData.districts?.[UNKNOWN_DISTRICT_KEY] &&\n      PRIMARY_STATISTICS.every(\n        (statistic) =>\n          getStatistic(stateData, 'total', statistic) ===\n          getStatistic(\n            stateData.districts[UNKNOWN_DISTRICT_KEY],\n            'total',\n            statistic\n          )\n      )\n    );\n  }, [stateData]);\n\n  const statisticConfig = STATISTIC_CONFIGS[primaryStatistic];\n\n  const noRegionHighlightedDistrictData =\n    regionHighlighted?.districtName &&\n    regionHighlighted.districtName !== UNKNOWN_DISTRICT_KEY &&\n    noDistrictData;\n\n  const districts = Object.keys(\n    ((!noDistrictData || !statisticConfig.hasPrimary) &&\n      stateData?.districts) ||\n    {}\n  );\n\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          Coronavirus Outbreak in {STATE_NAMES[stateCode]} - incovid19.org\n        </title>\n        <meta\n          name=\"title\"\n          content={`Coronavirus Outbreak in ${STATE_NAMES[stateCode]}: Latest Map and Case Count`}\n        />\n      </Helmet>\n\n      <div className=\"State\">\n        <div className=\"state-left\">\n          <StateHeader data={stateData} stateCode={stateCode} />\n\n          <div style={{ position: 'relative' }}>\n            <MapSwitcher {...{ mapStatistic, setMapStatistic }} />\n            <Level data={stateData} />\n            <Minigraphs\n              timeseries={timeseries?.[stateCode]?.dates}\n              {...{ stateCode }}\n              forceRender={!!timeseriesResponseError}\n            />\n          </div>\n\n          {stateData?.total?.vaccinated1 && (\n            <VaccinationHeader data={stateData} />\n          )}\n\n          {data && (\n            <Suspense fallback={<div style={{ minHeight: '50rem' }} />}>\n              <MapExplorer\n                {...{\n                  stateCode,\n                  data,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  mapStatistic,\n                  setMapStatistic,\n                  lastDataDate,\n                  delta7Mode,\n                  setDelta7Mode,\n                  noRegionHighlightedDistrictData,\n                  noDistrictData,\n                }}\n              ></MapExplorer>\n            </Suspense>\n          )}\n\n          <span ref={stateMetaElement} />\n\n          {isStateMetaVisible && data && (\n            <Suspense fallback={<div />}>\n              <StateMeta\n                {...{\n                  stateCode,\n                  data,\n                }}\n                timeseries={timeseries?.[stateCode]?.dates}\n              />\n            </Suspense>\n          )}\n        </div>\n\n        <div className=\"state-right\">\n          <>\n            <div className=\"district-bar\">\n              <div\n                className={classnames('district-bar-top', {\n                  expanded: showAllDistricts,\n                })}\n              >\n                <div className=\"district-bar-left\">\n                  <h2\n                    className={classnames(primaryStatistic, 'fadeInUp')}\n                    style={trail[0]}\n                  >\n                    {t('Top districts')}\n                  </h2>\n                  <div\n                    className={`districts fadeInUp ${showAllDistricts ? 'is-grid' : ''\n                      }`}\n                    style={\n                      showAllDistricts\n                        ? {\n                          gridTemplateRows: `repeat(${gridRowCount}, 2rem)`,\n                          ...trail[1],\n                        }\n                        : trail[1]\n                    }\n                  >\n                    {districts\n                      .filter((districtName) => districtName !== 'Unknown')\n                      .sort((a, b) => handleSort(a, b))\n                      .slice(0, showAllDistricts ? undefined : 5)\n                      .map((districtName) => {\n                        const total = getStatistic(\n                          stateData.districts[districtName],\n                          'total',\n                          primaryStatistic\n                        );\n                        const delta = getStatistic(\n                          stateData.districts[districtName],\n                          'delta',\n                          primaryStatistic\n                        );\n                        return (\n                          <div key={districtName} className=\"district\">\n                            <h2>{formatNumber(total)}</h2>\n                            <h5>{t(districtName)}</h5>\n                            {primaryStatistic !== 'active' && (\n                              <div className=\"delta\">\n                                <h6 className={primaryStatistic}>\n                                  {delta > 0\n                                    ? '\\u2191' + formatNumber(delta)\n                                    : ''}\n                                </h6>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n\n                <div className=\"district-bar-right fadeInUp\" style={trail[2]}>\n                  {timeseries &&\n                    (primaryStatistic === 'confirmed' ||\n                      primaryStatistic === 'deceased') && (\n                      <div className=\"happy-sign\">\n                        {Object.keys(timeseries[stateCode]?.dates || {})\n                          .slice(-lookback)\n                          .every(\n                            (date) =>\n                              getStatistic(\n                                timeseries[stateCode].dates[date],\n                                'delta',\n                                primaryStatistic\n                              ) === 0\n                          ) && (\n                            <div\n                              className={`alert ${primaryStatistic === 'confirmed' ? 'is-green' : ''\n                                }`}\n                            >\n                              <SmileyIcon />\n                              <div className=\"alert-right\">\n                                No new {primaryStatistic} cases in the past five\n                                days\n                              </div>\n                            </div>\n                          )}\n                      </div>\n                    )}\n                  <DeltaBarGraph\n                    timeseries={timeseries?.[stateCode]?.dates}\n                    statistic={primaryStatistic}\n                    {...{ stateCode, lookback }}\n                    forceRender={!!timeseriesResponseError}\n                  />\n                </div>\n              </div>\n\n              <div className=\"district-bar-bottom\">\n                {districts.length > 5 ? (\n                  <button\n                    className=\"button fadeInUp\"\n                    onClick={toggleShowAllDistricts}\n                    style={trail[3]}\n                  >\n                    <span>\n                      {t(showAllDistricts ? 'View less' : 'View all')}\n                    </span>\n                  </button>\n                ) : (\n                  <div style={{ height: '3.75rem', flexBasis: '15%' }} />\n                )}\n              </div>\n            </div>\n\n            <Suspense fallback={<div />}>\n              <TimeseriesExplorer\n                {...{\n                  stateCode,\n                  timeseries,\n                  regionHighlighted,\n                  setRegionHighlighted,\n                  noRegionHighlightedDistrictData,\n                }}\n                forceRender={!!timeseriesResponseError}\n              />\n              <div id=\"scatterplot-stats\">\n                <h1 lassName=\"text-center \">{t('Vaccination Coverage')}</h1>\n              </div>\n            </Suspense>\n          </>\n        </div>\n      </div>\n      {/* <div className=\"chartflex\">\n        <div className=\"flex1\">&nbsp;</div> */}\n      <div >\n\n      </div>\n      {/* </div> */}\n      <Footer />\n    </>\n  );\n}\n\nexport default memo(State);\n"],"sourceRoot":""}